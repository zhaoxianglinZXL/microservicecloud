官网解释
	http://projects.spring.io/spring-cloud/spring-cloud.html#spring-cloud-feign
	
	Feign是一个声明式WebService客户端，使用feign能让编写webService客户端更加简单，他
  的使用方法是定义一个接口，然后在上面加注解，同时也支持JAX-RS标准的注解，Feign也支持可拔插式
  的编码器和解码器，Spring Cloud 对Feign进行了封装，使其支持了Spring MVC标准注解和 
 HttpMessageConverters。Feign可以与Eureka 和 Ribbon 组合使用以支持负载均衡	
 
 		Feign是一个声明式WebService客户端，使用feign能让编写webService客户端更加简单
 	注意：1只需要创建一个接口，然后在上面添加注解即可
 	    2参考官网 https://github.com/OpenFeign/Feign
 

 之前大家用Ribbon进行负载均衡，功能很强大，甚至可以自己自定义算法，
 
Feign是怎么出来的呢？

1:大部分的大家都可以介绍，直接调用我们的微服务来进行访问
 	//private static String REST_URL_PREFIX = "http://localhost:8001";
 	      修改为
 	private static String REST_URL_PREFIX = "http://MICROSERVICECLOUD-DEPT";
 	
2：大家目前都习惯面向接口编程，比如WebService接口，比如我们的dao接口，这个已经坏死大家的规范
	2.1  微服务名字获得调用地址
	2.2 就是通过接口+注解，获得我们的调用服务
	       适应社区其他程序员提出的，还是统一的面相接口编程的套路，
	       只需要创建一个接口，然后在上面添加注解即可
	       
	       
Feign能干什么
	Feign旨在使编写Java Http客户端变得更容易
	前面在使用Ribbon+RestTemplate时，利用RestTemplate对Http请求的封装处理，形成了一套模板化的调用方法
	但是在实际开发中，由于对服务依赖的调用可能不止一处，往往一个接口会被多次调用，所以通常都会针对每个微服务自行封装一些
	客户端类来包装这些依赖服务的调用，所以，Feign在此基础上做了进一步封装，由他来帮助我们定义和实现依赖服务接口的定义
	在Feign的实现下，我们只需创建一个接口并使用注解的方式来配置它（以前是dao接口上面标注Mapper注解，现在是一个微服务
	接口上面标注一个Feign注解即可），即可完成对服务提供方的接口绑定，简化了使用 SpringCloud Ribbon时 ，自动封装
	服务调用客户单的开发量0
 	
 	
 
	