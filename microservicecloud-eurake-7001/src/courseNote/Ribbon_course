Ribbon在工作时分成两步 
	第一步优先选择EurekaServer, 它优先选择在同一个区域内负载较少的server
	第二步在根据用户指定的策略，在server取到的服务注册列表中选择一个地址
	其中	Ribbon提供了多种策略：比如轮询，随即和根据相应时间加权
	
--负载均衡
	自己理解： 使用了负载均衡算法以后  消费者访问多个服务者 是随机访问 这样就好 去访问压力小的服务者
	
	Ribbon其实就是一个软负载均衡的客户端组件。
	他可以和其他所需请求的客户端结合使用，和Eureka结合只是其中的一个实例
	
-- IRULE 根据特定算法中从服务列表中选取一个要访问的服务
	
 flink 一个流的控件 很强大
 
--Ribbon的核心控件IRule
	IRule：根据特定算法中从服务列表中选取一个要访问的服务
	
	拥有的方法==》https://blog.csdn.net/gcxzflgl/article/details/82916262
	
-- 问题：依旧轮询策略，但是加上新需求，每隔服务器要求被调用5次，也即以前是每台机器一次，现在每台
                   机器5次