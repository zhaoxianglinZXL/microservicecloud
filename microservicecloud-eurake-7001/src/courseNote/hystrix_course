hystrix短路器也即熔断器 主要承担服务熔断 服务降级的作用

http://www.cnblogs.com/gaoyanqing/p/7470085.html

-- 分布式系统面临的问题
	负责分布式体系结构中的应用程序有数十个依赖关系，每个依赖关系在某些时候将不可避免的失败
	途中的请求需要调用A,P,H,I四个服务，如果一切顺利则没有什么问题，关键是如果I服务超时会出现什么情况呢？
	https://www.cnblogs.com/yepei/p/7169127.html1 里面有图 第一个图 有A,P,H,I,的那个
	
	服务雪崩（）==>结果
	多个微服务之间调用的时候，假设微服务A调用微服务B和微服务C，微服务B和微服务C又调用其他的微服务，这就是所谓的“扇出”，如果扇出的链路上某个微服务的调用响应时间过长
	或者不可用，对微服务A的调用就会占用越来越多的系统资源，进而引起系统崩溃，所谓的“雪崩效应”
	
	对于高流量的应用来说，单一的后端依赖可能会导致所有服务器上的所有资源都在几秒钟内饱和，比失败更糟糕的是，这些应用程序还可能导致服务之间的延迟增加，备份队列，线程
	和其他系统资源紧张，导致整个系统发生更多的级联故障，这些都表示需要对故障和延迟进行隔离和管理，以便单个依赖关系的失败，不能取消整个应用程序或系统（瘫痪）
	
	
hystrix是一个用于处理分布式系统的延迟和容错的开源库，在分布式系统里，许多依赖不可避免的会调用失败，比如超时，异常等，hystrix能够保证在一个依赖出现问题的情况下，@不会
导致整体服务失败，避免级联故障，以提高分布式系统的弹性@

“短路器” 本身是一种开关装置，当某个服务单元发生故障之后，通过断路器的故障监控（类似熔断保险丝），@向调用方返回一个符合预期的、可处理的备选响应（FallBack）,而不是长时
间的等待或者抛出调用方无法处理的异常，这样就保障了服务调用方的线程不会被长时间、不必要的占用，从而避免了故障在分布式系统中的蔓延，乃至雪崩@

	Hystrix能干嘛？？？？
		1：服务降级
		2：服务熔断
		3：服务限流
		4：接近实时的监控
		
	官网资料： https://github.com/Netflix/Hystrix/wiki/How-To-Use
	
@@服务熔断            我的理解！ 即访问服务报错了 这个时候这个服务就会暂用我们的系统资源 为了能够在程序报错时能够给我们返回一个符合预期的 我们想要的结果
	熔断机制是应对雪崩效应的一种微服务链路保护机制。
	当扇出链路的某个微服务不可用或者响应时间太长时，会进行服务的降级，@进而熔断该节点微服务的调用，快速返回“错误”的相应信息，@ 当检测到该节点微服务调用响应正常后恢复
	调用链路，在SpringCloud框架里面熔断机制通过Hystrix实现，Hystrix会监控微服务间调用的情况，当失败调用到一定阈值，缺省是5秒20次调用失败就会启动熔断机制。
	熔断机制的直接是@HystrixCommand
	
@@服务降级 即整体资源不够了，忍痛将某些服务先关掉，待度过难关，在开启回来。
	服务降级是在客户端完成实现的，与服务端没有任何关系
	
42:
	除了隔离依赖服务的调用以外，Hystrix还提供了准实时的调用监控（HystrixDashboard）,Hystrix会持续地记录所有通过Hystrix发送的请求的执行信息，并以统计报表和图形
	的形式展示给用户，包括每秒执行多少请求多少成功，多少失败等，Netflix通过Hystrix-metrics-event-stream项目实现了对以上指标的监控，Spring Cloud也提供了Hystrix
	Dashboar的整合，对监控内容转化成可视化界面
	
	仪表盘  Spring Cloud也提供了Hystrix Dashboar
		//访问路径 http://localhost:9001/hystrix 在配置文件中配置 spring项目的访问名hystrix
		
使用hystrix来监控 微服务
	Delay: 该参数用来控制服务器上轮询监控信息的延迟时间，默认为2000毫秒，可以通过配置该属性来降低客户端的网络和CPU消耗
	Title： 该参数对应了头部标题Hystrix Stream之后的内容，默认会使用具体监控实例的URL,可以通过配置该信息来展示更合适的标题

	1：先启动三个eurake集群 在启动microservicecloud-provider-dept-hystrix-8001 最后在启动 microservicecloud-consumer-hystrix-dashboard
	
	2： 访问http://localhost:8001/hystrix.stream 会发现一大串json字符串
	
	3：观察监控窗口http://localhost:9001/hystrix
	
	3.1 填写监控地址  
	3.2监控结果
	3.3 如何看 7色 1圈 1线 整圈说明
	3.4： 搞懂一个才能看懂复杂的
	
	实心圈： 共有两种含义，它通过颜色的变化代表了实例的健康程度，他的健康度从绿色<黄色<橙色<红色递减
		     该实心圆除了颜色的变化之外，他的大小也会根据实例的请求流量发生变化，流量越大该实心圆就越大，所以通过该实心圆的展示，就可以在大量的实例中快速的发现@故障实例和高压力
		     实例@
	曲线：     用来记录2分钟内流量的相对变化，可以通过他来观察到流量的上升和下降趋势
	
	
	

